<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd        
	http://www.springframework.org/schema/context        
	http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/data/mongo
	http://www.springframework.org/schema/data/mongo/spring-mongo-1.8.xsd">

	<!-- -<context:component-scan base-package="com.healthcloudserver.Dao," /> -->
	<!-- MongoFactoryBean instance -->
	<context:property-placeholder location="classpath:mongodb.properties" ignore-unresolvable="true"/>
	<!-- 定义mongo对象，对应的是mongodb官方jar包中的Mongo，replica-set设置集群副本的ip地址和端口 -->  
    
<!-- 
 <mongo:mongo host="${mongo.host}" port="${mongo.port}">
  <mongo:options
     connections-per-host="${mongo.connectionsPerHost}"
     threads-allowed-to-block-for-connection-multiplier="${mongo.threadsAllowedToBlockForConnectionMultiplier}"
     connect-timeout="${mongo.connectTimeout}"
     max-wait-time="${mongo.maxWaitTime}"
     auto-connect-retry="${mongo.autoConnectRetry}"
     socket-keep-alive="${mongo.socketKeepAlive}"
     socket-timeout="${mongo.socketTimeout}"
     slave-ok="${mongo.slaveOk}"
     write-number="1"
     write-timeout="0"
     write-fsync="true"/>
</mongo:mongo>
<mongo:db-factory dbname="healthclouddb" mongo-ref="mongo"/>

<bean id="anotherMongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
  <constructor-arg name="mongoDbFactory" ref="mongoDbFactory"/>
</bean>


<mongo:mongo id="replicaSetMongo" replica-set="127.0.0.1:27017,localhost:27018"/>
 -->
    
    <!-- 映射转换器，扫描back-package目录下的文件，根据注释，把它们作为mongodb的一个collection的映射 -->  
    <!-- <mongo:mapping-converter base-package="com.healthcloudserver.domain" /> -->  
      
    <!-- mongodb bean的仓库目录，会自动扫描扩展了MongoRepository接口的接口进行注入 -->  
    <!-- <mongo:repositories base-package="com.healthcloudserver.persist.mongodb"/> -->  
  
    <!-- To translate any MongoExceptions thrown in @Repository annotated classes -->  
    <!-- <context:annotation-config /> -->  
    
		<!--mongo:mongo host="192.168.0.138" port="27017"/
	<bean id="mongo" class="org.springframework.data.mongodb.core.MongoFactoryBean">
	
		 <property name="host" value="192.168.31.114"/> 
         <property name="port" value="27107"/>
         <property name="dbname" value="healthclouddb"/>
         <property name="username" value="thea1th"/> 
         <property name="password" value="healthclouddb"/>   
	
	</bean>
	 -->
	
	<!-- MongoTemplate instance
	<bean id="patientController" class="com.healthcloudserver.bean.Patient.PatientController">
		<constructor-arg name="mongo" ref="mongo" />
		<constructor-arg name="healthclouddb" value="patienttable" />
		 <property name="patienrepository" ref="patienrepository"></property>   
	</bean>

	<mongo:repositories base-package="com.healthcloudserver.MongoDB" />
 -->
 
 <!-- 定义mongo对象，对应的是mongodb官方jar包中的Mongo，replica-set设置集群副本的ip地址和端口 -->
	<!-- <mongo:mongo id="replicaSetMongo" replica-set="127.0.0.1:27017,localhost:27018"/> -->       

<!-- <mongo:mongo id="mongo" host="${mongo.db.ip}" port="${mongo.db.port}"/> -->

<!-- 
	<mongo:options connections-per-host="${mongo.connectionsPerHost}" 
		 threads-allowed-to-block-for-connection-multiplier="${mongo.threadsAllowedToBlockForConnectionMultiplier}"
		 connect-timeout="${mongo.connectTimeout}" 
		 max-wait-time="${mongo.maxWaitTime}" 
		 auto-connect-retry="${mongo.autoConnectRetry}" 
		 socket-keep-alive="${mongo.socketKeepAlive}" 
		 socket-timeout="${mongo.socketTimeout}" 
		 slave-ok="${mongo.slaveOk}" 
		 write-number="1" 
		 write-timeout="0" 
		 write-fsync="true" /> -->
		 <!-- 
	<bean id="userCredentials" class="org.springframework.data.authentication.UserCredentials">
	<constructor-arg name="username" value="${mongo.db.username}"/>
	<constructor-arg name="password" value="${mongo.db.password}"/>
		<constructor-arg ref="userCredentials"/>
	</bean>
	 -->
	 <!-- 
	<bean id="mongoDbFactory" class="org.springframework.data.mongodb.core.SimpleMongoDbFactory">
	<constructor-arg ref="mongo"/>
	<constructor-arg value="${mongo.db.dbname}"/>

	</bean>
	
	<bean id="mappingContext" class="org.springframework.data.mongodb.core.mapping.MongoMappingContext"/>
	
	<bean id="defaultMongoTypeMapper" class="org.springframework.data.mongodb.core.convert.DefaultMongoTypeMapper">
	<constructor-arg name="typeKey" ><null/></constructor-arg>
	</bean>
	
	<bean id="mappingMongoConverter" class="org.springframework.data.mongodb.core.convert.MappingMongoConverter">
	<constructor-arg name="mongoDbFactory" ref="mongoDbFactory"/>
	<constructor-arg name="mappingContext" ref="mappingContext"/>
	<property name="typeMapper" ref="defaultMongoTypeMapper"/>
	</bean>
	
	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
	<constructor-arg name="mongoDbFactory" ref="mongoDbFactory"/>
	<constructor-arg name="mongoConverter" ref="mappingMongoConverter"/>
	</bean>
	
	 -->
	  <mongo:mongo host="${mongo.db.ip}" port="${mongo.db.port}"/>
  
  <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
    <constructor-arg ref="mongo"/>
    <constructor-arg name="databaseName" value="${mongo.db.dbname}"/>
  </bean>
	


</beans>