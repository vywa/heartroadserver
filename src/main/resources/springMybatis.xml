<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
xmlns:context="http://www.springframework.org/schema/context" 
 xmlns:tx="http://www.springframework.org/schema/tx" 
   xmlns:aop="http://www.springframework.org/schema/aop" 
   xmlns:p ="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd      
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/aop  
	http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
	http://www.springframework.org/schema/context        
	http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<!-- 引入属性文件 -->
	<context:property-placeholder location="classpath:mysql.properties" ignore-unresolvable="true"/>
	  <!-- healthcloud数据源 
    <bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">  
        <property name="url" value="${healthcloud.url}" />  
        <property name="username" value="${healthcloud.username}" />  
        <property name="password" value="${healthcloud.password}" />  
        <property name="initialSize" value="1" />  
        <property name="maxActive" value="20" />  
        <property name="minIdle" value="1" />  
        <property name="maxWait" value="60000" />  
        <property name="validationQuery" value="${validationQuery}" />  
        <property name="testOnBorrow" value="false" />  
        <property name="testOnReturn" value="false" />  
        <property name="testWhileIdle" value="true" />  
        <property name="timeBetweenEvictionRunsMillis" value="60000" />  
        <property name="minEvictableIdleTimeMillis" value="25200000" />  
        <property name="removeAbandoned" value="true" />  
        <property name="removeAbandonedTimeout" value="1800" />  
        <property name="logAbandoned" value="true" />  
        <property name="filters" value="mergeStat" />  
    </bean> 
 -->  
	  <!-- 数据源 -->  
    <bean name="bb" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">  
        <property name="url" value="${openfire.url}" />  
        <property name="username" value="${openfire.username}" />  
        <property name="password" value="${openfire.password}" />  
        <property name="initialSize" value="1" />  
        <property name="maxActive" value="20" />  
        <property name="minIdle" value="1" />  
        <property name="maxWait" value="60000" />  
        <property name="validationQuery" value="${validationQuery}" />  
        <property name="testOnBorrow" value="false" />  
        <property name="testOnReturn" value="false" />  
        <property name="testWhileIdle" value="true" />  
        <property name="timeBetweenEvictionRunsMillis" value="60000" />  
        <property name="minEvictableIdleTimeMillis" value="25200000" />  
        <property name="removeAbandoned" value="true" />  
        <property name="removeAbandonedTimeout" value="1800" />  
        <property name="logAbandoned" value="true" />  
        <property name="filters" value="mergeStat" />  
    </bean>  
	
	    <bean  name="healthcloud" class="org.mybatis.spring.SqlSessionFactoryBean">  
    	 <property name="typeAliasesPackage" value="com.healthcloud.domain.account,
    	 com.healthcloud.domain.forum,
    	 com.healthcloud.domain.friendcircle,
    	 com.healthcloud.domain.message,
    	 com.healthcloud.domain.operation,
    	 com.healthcloud.domain.rank,
    	  com.healthcloud.domain.shopping,
    	 com.healthcloud.domain.score"/> 
        <property name="dataSource" ref="bb" />  
        <property name="mapperLocations" value="classpath:Mapper/**/*Mapper.xml" />  
    </bean>  


    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.healthcloud.dao" />  
        <property name="sqlSessionFactoryBeanName" value="healthcloud" />  
    </bean>  
 
		<!-- 配置事务管理器 -->
	<bean id="txManager"
	        class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
	        p:dataSource-ref="bb">
	</bean>

	<tx:annotation-driven transaction-manager="txManager" />
 	<!-- myBatis文件 -->  
 	<!-- 
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <property name="mapperLocations"  value=" classpath:mapper/*Mapper.xml" >
        </property>  
    </bean>  
 -->
  <!-- dao扫描 -->
  <!-- 
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.hengyun.dao.logininfo.mysql,com.hengyun.dao.friendcircle.mysql" />  
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />  
    </bean>  
   -->
    
    
    <!-- 配置事务管理器
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean>  
  
 
    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">  
        <tx:attributes>  
            <tx:method name="add*" propagation="REQUIRED" />  
            <tx:method name="modify*" propagation="REQUIRED" />  
            <tx:method name="delete*" propagation="REQUIRED" />  
            <tx:method name="find*" propagation="SUPPORTS" />  
            <tx:method name="query" propagation="SUPPORTS" />  
            <tx:method name="search*" propagation="SUPPORTS" />  
            <tx:method name="*" propagation="SUPPORTS" />  
        </tx:attributes>  
    </tx:advice>  
    
    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>
	<aop:config proxy-target-class="true">
		<aop:pointcut id="transactionPointcut"
			expression="execution(* com.hengyun.service.notice.*.*(..))" />
		<aop:advisor pointcut-ref="transactionPointcut"
			advice-ref="transactionAdvice" />
	</aop:config>
     -->  
    <!-- aop代理设置 -->
    <!-- 
    <aop:config>  
        <aop:pointcut id="transactionPointcut" expression=" execution(* com.hengyun.service.logininfo.mysql.*.*.(..))" />  
        <aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice" />  
    </aop:config>  
     -->
    <!-- 配置druid监控spring jdbc -->  
    <!-- 
    <bean id="druid-stat-interceptor" class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor">  
    </bean>  
    <bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut" scope="prototype">  
        <property name="patterns">  
            <list>  
                <value>com.hengyun.service.impl.authority</value>  
            </list>  
              
        </property>  
    </bean>  
    <aop:config>  
        <aop:advisor advice-ref="druid-stat-interceptor" pointcut-ref="druid-stat-pointcut" />  
    </aop:config>
     -->  
</beans>